//-------------------------------------------------------------------------------
// Annotations
//-------------------------------------------------------------------------------

//@Export('bugflow.Task')

//@Require('Class')
//@Require('bugflow.Flow')


//-------------------------------------------------------------------------------
// Common Modules
//-------------------------------------------------------------------------------

var bugpack = require('bugpack').context();


//-------------------------------------------------------------------------------
// BugPack
//-------------------------------------------------------------------------------

var Class = bugpack.require('Class');
var Flow =  bugpack.require('bugflow.Flow');


//-------------------------------------------------------------------------------
// Declare Class
//-------------------------------------------------------------------------------

//NOTE BRN: An instance of this class is designed to be used only once.

var Task = Class.extend(Flow, {

    //-------------------------------------------------------------------------------
    // Constructor
    //-------------------------------------------------------------------------------

    _constructor: function(taskMethod, taskContext) {

        this._super();


        //-------------------------------------------------------------------------------
        // Private Properties
        //-------------------------------------------------------------------------------

        /**
         * @private
         * @type {Object}
         */
        this.taskContext = taskContext;

        /**
         * @private
         * @type {function(Flow)}
         */
        this.taskMethod = taskMethod;
    },


    //-------------------------------------------------------------------------------
    // Flow Extensions
    //-------------------------------------------------------------------------------

    /**
     * @param {Array<*>} args
     */
    executeFlow: function(args) {
        this._super(args);
        this.taskMethod.apply(this.taskContext, ([this]).concat(args));
    }
});


//-------------------------------------------------------------------------------
// Export
//-------------------------------------------------------------------------------

bugpack.export('bugflow.Task', Task);
